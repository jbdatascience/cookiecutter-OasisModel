<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2015r4sp1

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:agt="http://www.altova.com/Mapforce/agt" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="agt xs">
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template name="agt:MapToCatrisks_ModelLoc_var21_function">
		<xsl:param name="var20_current"/>
		<xsl:variable name="var18_LocId">
			<xsl:if test="$var20_current/@LocId">
				<xsl:value-of select="'1'"/>
			</xsl:if>
		</xsl:variable>
		<xsl:variable name="var19_resultof_exists" select="boolean(string($var18_LocId))"/>
		<rec>
			<xsl:if test="string($var19_resultof_exists) != 'false'">
				<xsl:attribute name="Item_ID">
					<xsl:value-of select="string($var20_current/@LocId)"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="var1_ACCNTNUM">
				<xsl:if test="$var20_current/@ACCNTNUM">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="ACCNTNUM">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var1_ACCNTNUM))) != 'false'">
						<xsl:value-of select="string($var20_current/@ACCNTNUM)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var2_LOCNUM">
				<xsl:if test="$var20_current/@LOCNUM">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="LOCNUM">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var2_LOCNUM))) != 'false'">
						<xsl:value-of select="string($var20_current/@LOCNUM)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var3_CITY">
				<xsl:if test="$var20_current/@CITY">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="CITY">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var3_CITY))) != 'false'">
						<xsl:value-of select="string($var20_current/@CITY)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var4_STATE">
				<xsl:if test="$var20_current/@STATE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="STATE">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var4_STATE))) != 'false'">
						<xsl:value-of select="string($var20_current/@STATE)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var5_LATITUDE">
				<xsl:if test="$var20_current/@LATITUDE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="LATITUDE">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var5_LATITUDE))) != 'false'">
						<xsl:value-of select="string($var20_current/@LATITUDE)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var6_LONGITUDE">
				<xsl:if test="$var20_current/@LONGITUDE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="LONGITUDE">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var6_LONGITUDE))) != 'false'">
						<xsl:value-of select="string($var20_current/@LONGITUDE)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var7_ADDRMATCH">
				<xsl:if test="$var20_current/@ADDRMATCH">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="ADDRMATCH">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var7_ADDRMATCH))) != 'false'">
						<xsl:value-of select="string($var20_current/@ADDRMATCH)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var8_COUNTRY">
				<xsl:if test="$var20_current/@COUNTRY">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="COUNTRY">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var8_COUNTRY))) != 'false'">
						<xsl:value-of select="string($var20_current/@COUNTRY)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var9_NUMBLDGS">
				<xsl:if test="$var20_current/@NUMBLDGS">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="NUMBLDGS">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var9_NUMBLDGS))) != 'false'">
						<xsl:value-of select="string($var20_current/@NUMBLDGS)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var10_BLDGSCHEME">
				<xsl:if test="$var20_current/@BLDGSCHEME">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="BLDGSCHEME">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var10_BLDGSCHEME))) != 'false'">
						<xsl:value-of select="string($var20_current/@BLDGSCHEME)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var11_BLDGCLASS">
				<xsl:if test="$var20_current/@BLDGCLASS">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="BLDGCLASS">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var11_BLDGCLASS))) != 'false'">
						<xsl:value-of select="string($var20_current/@BLDGCLASS)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var12_OCCSCHEME">
				<xsl:if test="$var20_current/@OCCSCHEME">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="OCCSCHEME">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var12_OCCSCHEME))) != 'false'">
						<xsl:value-of select="string($var20_current/@OCCSCHEME)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var13_OCCTYPE">
				<xsl:if test="$var20_current/@OCCTYPE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="OCCTYPE">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var13_OCCTYPE))) != 'false'">
						<xsl:value-of select="string($var20_current/@OCCTYPE)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var14_CNTRYSCHEME">
				<xsl:if test="$var20_current/@CNTRYSCHEME">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="CNTRYSCHEME">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var14_CNTRYSCHEME))) != 'false'">
						<xsl:value-of select="string($var20_current/@CNTRYSCHEME)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var15_CNTRYCODE">
				<xsl:if test="$var20_current/@CNTRYCODE">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="CNTRYCODE">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var15_CNTRYCODE))) != 'false'">
						<xsl:value-of select="string($var20_current/@CNTRYCODE)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var16_EQCVVAL">
				<xsl:if test="$var20_current/@EQCV1VAL">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="EQCV1VAL">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var16_EQCVVAL))) != 'false'">
						<xsl:value-of select="string($var20_current/@EQCV1VAL)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:variable name="var17_EQCVVAL">
				<xsl:if test="$var20_current/@EQCV2VAL">
					<xsl:value-of select="'1'"/>
				</xsl:if>
			</xsl:variable>
			<xsl:attribute name="EQCV2VAL">
				<xsl:choose>
					<xsl:when test="string(boolean(string($var17_EQCVVAL))) != 'false'">
						<xsl:value-of select="string($var20_current/@EQCV2VAL)"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="string('0')"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:if test="string($var19_resultof_exists) != 'false'">
				<xsl:attribute name="Locfilerowlocator">
					<xsl:value-of select="string($var20_current/@LocId)"/>
				</xsl:attribute>
			</xsl:if>
		</rec>
	</xsl:template>
	<xsl:template name="agt:MapToCatrisks_ModelLoc_var23_resultof_map">
		<xsl:param name="var22_current"/>
		<xsl:for-each select="$var22_current/rec">
			<xsl:call-template name="agt:MapToCatrisks_ModelLoc_var21_function">
				<xsl:with-param name="var20_current" select="."/>
			</xsl:call-template>
		</xsl:for-each>
	</xsl:template>
	<xsl:template match="/">
		<root>
			<xsl:attribute name="xsi:noNamespaceSchemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance">C:/dbFiles/Transformations/Catrisks/meem/Catrisks_ModelLoc.xsd</xsl:attribute>
			<xsl:for-each select="root">
				<xsl:call-template name="agt:MapToCatrisks_ModelLoc_var23_resultof_map">
					<xsl:with-param name="var22_current" select="."/>
				</xsl:call-template>
			</xsl:for-each>
		</root>
	</xsl:template>
</xsl:stylesheet>
